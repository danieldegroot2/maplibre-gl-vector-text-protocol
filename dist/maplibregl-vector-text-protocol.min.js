!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VectorTextProtocol={})}(this,(function(e){"use strict";function t(e,t){return t.forEach((function(t){t&&"string"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(n){if("default"!==n&&!(n in e)){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}}))})),Object.freeze(e)}"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var n={exports:{}};!function(e,t){!function(e){function t(e){return new Function("d","return {"+e.map((function(e,t){return JSON.stringify(e)+": d["+t+"]"})).join(",")+"}")}function n(e,n){var r=t(e);return function(t,o){return n(r(t),o,e)}}function r(e){var t=Object.create(null),n=[];return e.forEach((function(e){for(var r in e)r in t||n.push(t[r]=r)})),n}function o(e){var o=new RegExp('["'+e+"\n]"),s=e.charCodeAt(0);function a(e,r){var o,s,a=i(e,(function(e,a){if(o)return o(e,a-1);s=e,o=r?n(e,r):t(e)}));return a.columns=s,a}function i(e,t){var n,r,o={},a={},i=[],l=e.length,c=0,u=0;function f(){if(c>=l)return a;if(r)return r=!1,o;var t,n=c;if(34===e.charCodeAt(n)){for(var i=n;i++<l;)if(34===e.charCodeAt(i)){if(34!==e.charCodeAt(i+1))break;++i}return c=i+2,13===(t=e.charCodeAt(i+1))?(r=!0,10===e.charCodeAt(i+2)&&++c):10===t&&(r=!0),e.slice(n+1,i).replace(/""/g,'"')}for(;c<l;){var u=1;if(10===(t=e.charCodeAt(c++)))r=!0;else if(13===t)r=!0,10===e.charCodeAt(c)&&(++c,++u);else if(t!==s)continue;return e.slice(n,c-u)}return e.slice(n)}for(;(n=f())!==a;){for(var p=[];n!==o&&n!==a;)p.push(n),n=f();t&&null==(p=t(p,u++))||i.push(p)}return i}function l(t,n){return null==n&&(n=r(t)),[n.map(f).join(e)].concat(t.map((function(t){return n.map((function(e){return f(t[e])})).join(e)}))).join("\n")}function c(e){return e.map(u).join("\n")}function u(t){return t.map(f).join(e)}function f(e){return null==e?"":o.test(e+="")?'"'+e.replace(/\"/g,'""')+'"':e}return{parse:a,parseRows:i,format:l,formatRows:c}}var s=o(","),a=s.parse,i=s.parseRows,l=s.format,c=s.formatRows,u=o("\t"),f=u.parse,p=u.parseRows,g=u.format,m=u.formatRows;e.dsvFormat=o,e.csvParse=a,e.csvParseRows=i,e.csvFormat=l,e.csvFormatRows=c,e.tsvParse=f,e.tsvParseRows=p,e.tsvFormat=g,e.tsvFormatRows=m,Object.defineProperty(e,"__esModule",{value:!0})}(t)}(0,n.exports);var r={exports:{}};function o(e,t){var n=s(e,t);return n.whole+"° "+(n.minutes?n.minutes+"' ":"")+(n.seconds?n.seconds+'" ':"")+n.dir}function s(e,t){var n=({lat:["N","S"],lon:["E","W"]}[t]||"")[e>=0?0:1],r=Math.abs(e),o=Math.floor(r),s=60*(r-o),a=Math.floor(s);return{whole:o,minutes:a,seconds:Math.floor(60*(s-a)),dir:n}}function a(e,t){if(t||(t="NSEW"),"string"!=typeof e)return null;var n=(e=e.toUpperCase()).match(/^[\s\,]*([NSEW])?\s*([\-|\—|\―]?[0-9.]+)[°º˚]?\s*(?:([0-9.]+)['’′‘]\s*)?(?:([0-9.]+)(?:''|"|”|″)\s*)?([NSEW])?/);if(!n)return null;var r,o=n[0];if(n[1]&&n[5]?(r=n[1],o=o.slice(0,-1)):r=n[1]||n[5],r&&-1===t.indexOf(r))return null;var s=n[2]?parseFloat(n[2]):0,a=n[3]?parseFloat(n[3])/60:0,i=n[4]?parseFloat(n[4])/3600:0,l=s<0?-1:1;return"S"!==r&&"W"!==r||(l*=-1),{val:(Math.abs(s)+a+i)*l,dim:r,matched:o,remain:e.slice(o.length)}}r.exports=function(e,t){var n=a(e,t);return null===n?null:n.val},r.exports.pair=function(e,t){var n=a(e=e.trim(),t);if(!n)return null;var r=a(e=n.remain.trim(),t);if(!r||r.remain)return null;return n.dim?function(e,t,n){if("N"===n||"S"===n)return[e,t];if("W"===n||"E"===n)return[t,e]}(n.val,r.val,n.dim):[n.val,r.val]},r.exports.format=o,r.exports.formatPair=function(e){return o(e.lat,"lat")+" "+o(e.lon,"lon")},r.exports.coordToDMS=s;var i=n.exports,l=r.exports,c=/(Lat)(itude)?/gi,u=/(L)(on|ng)(gitude)?/i;function f(e,t){var n,r,o;for(var s in e)(r=s.match(t))&&(!n||r[0].length/s.length>o)&&(o=r[0].length/s.length,n=s);return n}function p(e){return f(e,c)}function g(e){return f(e,u)}function m(e){return"object"==typeof e?Object.keys(e).length:0}function d(e){var t=[];return[",",";","\t","|"].forEach((function(n){var r=i.dsvFormat(n).parse(e);if(r.length>=1){for(var o=m(r[0]),s=0;s<r.length;s++)if(m(r[s])!==o)return;t.push({delimiter:n,arity:Object.keys(r[0]).length})}})),t.length?t.sort((function(e,t){return t.arity-e.arity}))[0].delimiter:null}var h={isLon:function(e){return!!e.match(u)},isLat:function(e){return!!e.match(c)},guessLatHeader:p,guessLonHeader:g,csv:i.csvParse,tsv:i.tsvParse,dsv:i,auto:function(e){var t=d(e);return t?function(e){return delete e.columns,e}(i.dsvFormat(t).parse(e)):null},csv2geojson:function(e,t,n){n||(n=t,t={}),t.delimiter=t.delimiter||",";var r=t.latfield||"",o=t.lonfield||"",s=t.crs||"",a=[],c={type:"FeatureCollection",features:a};if(""!==s&&(c.crs={type:"name",properties:{name:s}}),"auto"!==t.delimiter||"string"!=typeof e||(t.delimiter=d(e),t.delimiter)){var u=t.numericFields?t.numericFields.split(","):null,f="string"==typeof e?i.dsvFormat(t.delimiter).parse(e,(function(e){if(u)for(var t in e)u.includes(t)&&(e[t]=+e[t]);return e})):e;if(f.length){var m,h=[];if(r||(r=p(f[0])),o||(o=g(f[0])),!r||!o){for(m=0;m<f.length;m++)a.push({type:"Feature",properties:f[m],geometry:null});n(h.length?h:null,c)}else{for(m=0;m<f.length;m++)if(void 0!==f[m][o]&&void 0!==f[m][r]){var y,v,x,b=f[m][o],N=f[m][r];(x=l(b,"EW"))&&(b=x),(x=l(N,"NS"))&&(N=x),y=parseFloat(b),v=parseFloat(N),isNaN(y)||isNaN(v)?h.push({message:"A row contained an invalid value for latitude or longitude",row:f[m],index:m}):(t.includeLatLon||(delete f[m][o],delete f[m][r]),a.push({type:"Feature",properties:f[m],geometry:{type:"Point",coordinates:[parseFloat(y),parseFloat(v)]}}))}n(h.length?h:null,c)}}else n(null,c)}else n({type:"Error",message:"Could not autodetect delimiter"})},toLine:function(e){for(var t=e.features,n={type:"Feature",geometry:{type:"LineString",coordinates:[]}},r=0;r<t.length;r++)n.geometry.coordinates.push(t[r].geometry.coordinates);return n.properties=t.reduce((function(e,t){for(var n in t.properties)e[n]||(e[n]=[]),e[n].push(t.properties[n]);return e}),{}),{type:"FeatureCollection",features:[n]}},toPolygon:function(e){for(var t=e.features,n={type:"Feature",geometry:{type:"Polygon",coordinates:[[]]}},r=0;r<t.length;r++)n.geometry.coordinates[0].push(t[r].geometry.coordinates);return n.properties=t.reduce((function(e,t){for(var n in t.properties)e[n]||(e[n]=[]),e[n].push(t.properties[n]);return e}),{}),{type:"FeatureCollection",features:[n]}}};function y(e){return e}function v(e,t){var n=t.id,r=t.bbox,o=null==t.properties?{}:t.properties,s=function(e,t){var n=function(e){if(null==e)return y;var t,n,r=e.scale[0],o=e.scale[1],s=e.translate[0],a=e.translate[1];return function(e,i){i||(t=n=0);var l=2,c=e.length,u=new Array(c);for(u[0]=(t+=e[0])*r+s,u[1]=(n+=e[1])*o+a;l<c;)u[l]=e[l],++l;return u}}(e.transform),r=e.arcs;function o(e,t){t.length&&t.pop();for(var o=r[e<0?~e:e],s=0,a=o.length;s<a;++s)t.push(n(o[s],s));e<0&&function(e,t){for(var n,r=e.length,o=r-t;o<--r;)n=e[o],e[o++]=e[r],e[r]=n}(t,a)}function s(e){return n(e)}function a(e){for(var t=[],n=0,r=e.length;n<r;++n)o(e[n],t);return t.length<2&&t.push(t[0]),t}function i(e){for(var t=a(e);t.length<4;)t.push(t[0]);return t}function l(e){return e.map(i)}function c(e){var t,n=e.type;switch(n){case"GeometryCollection":return{type:n,geometries:e.geometries.map(c)};case"Point":t=s(e.coordinates);break;case"MultiPoint":t=e.coordinates.map(s);break;case"LineString":t=a(e.arcs);break;case"MultiLineString":t=e.arcs.map(a);break;case"Polygon":t=l(e.arcs);break;case"MultiPolygon":t=e.arcs.map(l);break;default:return null}return{type:n,coordinates:t}}return c(t)}(e,t);return null==n&&null==r?{type:"Feature",properties:o,geometry:s}:null==r?{type:"Feature",id:n,properties:o,geometry:s}:{type:"Feature",id:n,bbox:r,properties:o,geometry:s}}var x={};function b(e){return e&&e.normalize&&e.normalize(),e&&e.textContent||""}function N(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null}function F(e){const t={};if(e){const n=N(e,"line");if(n){const e=b(N(n,"color")),r=parseFloat(b(N(n,"opacity"))),o=parseFloat(b(N(n,"width")));e&&(t.stroke=e),isNaN(r)||(t["stroke-opacity"]=r),isNaN(o)||(t["stroke-width"]=96*o/25.4)}}return t}function T(e,t){const n={};let r,o;for(o=0;o<t.length;o++)r=N(e,t[o]),r&&(n[t[o]]=b(r));return n}function w(e){const t=T(e,["name","cmt","desc","type","time","keywords"]),n=e.getElementsByTagNameNS("http://www.garmin.com/xmlschemas/GpxExtensions/v3","*");for(let r=0;r<n.length;r++){const o=n[r];o.parentNode.parentNode===e&&(t[o.tagName.replace(":","_")]=b(o))}const r=e.getElementsByTagName("link");r.length&&(t.links=[]);for(let e=0;e<r.length;e++)t.links.push(Object.assign({href:r[e].getAttribute("href")},T(r[e],["text","type"])));return t}function S(e){const t=[parseFloat(e.getAttribute("lon")),parseFloat(e.getAttribute("lat"))],n=N(e,"ele"),r=N(e,"gpxtpx:hr")||N(e,"hr"),o=N(e,"time");let s;n&&(s=parseFloat(b(n)),isNaN(s)||t.push(s));const a={coordinates:t,time:o?b(o):null,extendedValues:[]};r&&a.extendedValues.push(["heart",parseFloat(b(r))]);const i=N(e,"extensions");if(null!==i)for(const e of["speed","course","hAcc","vAcc"]){const t=parseFloat(b(N(i,e)));isNaN(t)||a.extendedValues.push([e,t])}return a}function P(e){const t=k(e,"rtept");if(t)return{type:"Feature",properties:Object.assign(w(e),F(N(e,"extensions")),{_gpxType:"rte"}),geometry:{type:"LineString",coordinates:t.line}}}function k(e,t){const n=e.getElementsByTagName(t);if(n.length<2)return;const r=[],o=[],s={};for(let e=0;e<n.length;e++){const t=S(n[e]);r.push(t.coordinates),t.time&&o.push(t.time);for(let r=0;r<t.extendedValues.length;r++){const[o,a]=t.extendedValues[r],i="heart"===o?o:o+"s";s[i]||(s[i]=Array(n.length).fill(null)),s[i][e]=a}}return{line:r,times:o,extendedValues:s}}function E(e){const t=e.getElementsByTagName("trkseg"),n=[],r=[],o=[];for(let e=0;e<t.length;e++){const n=k(t[e],"trkpt");n&&(o.push(n),n.times&&n.times.length&&r.push(n.times))}if(0===o.length)return;const s=o.length>1,a=Object.assign(w(e),F(N(e,"extensions")),{_gpxType:"trk"},r.length?{coordinateProperties:{times:s?r:r[0]}}:{});for(let e=0;e<o.length;e++){const t=o[e];n.push(t.line);for(const[n,r]of Object.entries(t.extendedValues)){let t=a;"heart"===n&&(a.coordinateProperties||(a.coordinateProperties={}),t=a.coordinateProperties),s?(t[n]||(t[n]=o.map((e=>new Array(e.line.length).fill(null)))),t[n][e]=r):t[n]=r}}return{type:"Feature",properties:a,geometry:s?{type:"MultiLineString",coordinates:n}:{type:"LineString",coordinates:n[0]}}}function*A(e){const t=e.getElementsByTagName("trk"),n=e.getElementsByTagName("rte"),r=e.getElementsByTagName("wpt");for(let e=0;e<t.length;e++){const n=E(t[e]);n&&(yield n)}for(let e=0;e<n.length;e++){const t=P(n[e]);t&&(yield t)}for(let e=0;e<r.length;e++)yield(o=r[e],{type:"Feature",properties:Object.assign(w(o),T(o,["sym"])),geometry:{type:"Point",coordinates:S(o).coordinates}});var o}Object.defineProperty(x,"__esModule",{value:!0});const j=[["heartRate","heartRates"],["Cadence","cadences"],["Speed","speeds"],["Watts","watts"]],C=[["TotalTimeSeconds","totalTimeSeconds"],["DistanceMeters","distanceMeters"],["MaximumSpeed","maxSpeed"],["AverageHeartRateBpm","avgHeartRate"],["MaximumHeartRateBpm","maxHeartRate"],["AvgSpeed","avgSpeed"],["AvgWatts","avgWatts"],["MaxWatts","maxWatts"]];function L(e,t){const n=[];for(const[r,o]of t){let t=N(e,r);if(!t){const n=e.getElementsByTagNameNS("http://www.garmin.com/xmlschemas/ActivityExtension/v2",r);n.length&&(t=n[0])}const s=parseFloat(b(t));isNaN(s)||n.push([o,s])}return n}function M(e){const t=b(N(e,"LongitudeDegrees")),n=b(N(e,"LatitudeDegrees"));if(!t.length||!n.length)return null;const r=[parseFloat(t),parseFloat(n)],o=N(e,"AltitudeMeters"),s=N(e,"HeartRateBpm"),a=N(e,"Time");let i;return o&&(i=parseFloat(b(o)),isNaN(i)||r.push(i)),{coordinates:r,time:a?b(a):null,heartRate:s?parseFloat(b(s)):null,extensions:L(e,j)}}function B(e,t){const n=e.getElementsByTagName(t),r=[],o=[],s=[];if(n.length<2)return null;const a={extendedProperties:{}};for(let e=0;e<n.length;e++){const t=M(n[e]);if(null!==t){r.push(t.coordinates),t.time&&o.push(t.time),t.heartRate&&s.push(t.heartRate);for(const[r,o]of t.extensions)a.extendedProperties[r]||(a.extendedProperties[r]=Array(n.length).fill(null)),a.extendedProperties[r][e]=o}}return Object.assign(a,{line:r,times:o,heartRates:s})}function O(e){const t=e.getElementsByTagName("Track"),n=[],r=[],o=[],s=[];let a;const i=function(e){const t={};for(const[n,r]of e)t[n]=r;return t}(L(e,C)),l=N(e,"Name");l&&(i.name=b(l));for(let e=0;e<t.length;e++)a=B(t[e],"Trackpoint"),a&&(n.push(a.line),a.times.length&&r.push(a.times),a.heartRates.length&&o.push(a.heartRates),s.push(a.extendedProperties));for(let e=0;e<s.length;e++){const r=s[e];for(const o in r)1===t.length?i[o]=a.extendedProperties[o]:(i[o]||(i[o]=n.map((e=>Array(e.length).fill(null)))),i[o][e]=r[o])}if(0!==n.length)return(r.length||o.length)&&(i.coordinateProperties=Object.assign(r.length?{times:1===n.length?r[0]:r}:{},o.length?{heart:1===n.length?o[0]:o}:{})),{type:"Feature",properties:i,geometry:{type:1===n.length?"LineString":"MultiLineString",coordinates:1===n.length?n[0]:n}}}function*R(e){const t=e.getElementsByTagName("Lap");for(let e=0;e<t.length;e++){const n=O(t[e]);n&&(yield n)}const n=e.getElementsByTagName("Courses");for(let e=0;e<n.length;e++){const t=O(n[e]);t&&(yield t)}}const _=/\s*/g,G=/^\s*|\s*$/g,D=/\s+/;function W(e){if(!e||!e.length)return 0;let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n)|0;return t}function H(e){return e.replace(_,"").split(",").map(parseFloat)}function V(e){return e.replace(G,"").split(D).map(H)}function J(e){if(void 0!==e.xml)return e.xml;if(e.tagName){let t=e.tagName;for(let n=0;n<e.attributes.length;n++)t+=e.attributes[n].name+e.attributes[n].value;for(let n=0;n<e.childNodes.length;n++)t+=J(e.childNodes[n]);return t}return"#text"===e.nodeName?(e.nodeValue||e.value||"").trim():"#cdata-section"===e.nodeName?e.nodeValue:""}const I=["Polygon","LineString","Point","Track","gx:Track"];function z(e,t,n){let r=b(N(t,"color"))||"";const o="stroke"==n||"fill"===n?n:n+"-color";"#"===r.substr(0,1)&&(r=r.substr(1)),6===r.length||3===r.length?e[o]=r:8===r.length&&(e[n+"-opacity"]=parseInt(r.substr(0,2),16)/255,e[o]="#"+r.substr(6,2)+r.substr(4,2)+r.substr(2,2))}function U(e,t,n,r){const o=parseFloat(b(N(t,n)));isNaN(o)||(e[r]=o)}function X(e){let t=e.getElementsByTagName("coord");const n=[],r=[];0===t.length&&(t=e.getElementsByTagName("gx:coord"));for(let e=0;e<t.length;e++)n.push(b(t[e]).split(" ").map(parseFloat));const o=e.getElementsByTagName("when");for(let e=0;e<o.length;e++)r.push(b(o[e]));return{coords:n,times:r}}function $(e){let t,n,r,o,s;const a=[],i=[];if(N(e,"MultiGeometry"))return $(N(e,"MultiGeometry"));if(N(e,"MultiTrack"))return $(N(e,"MultiTrack"));if(N(e,"gx:MultiTrack"))return $(N(e,"gx:MultiTrack"));for(r=0;r<I.length;r++)if(n=e.getElementsByTagName(I[r]),n)for(o=0;o<n.length;o++)if(t=n[o],"Point"===I[r])a.push({type:"Point",coordinates:H(b(N(t,"coordinates")))});else if("LineString"===I[r])a.push({type:"LineString",coordinates:V(b(N(t,"coordinates")))});else if("Polygon"===I[r]){const e=t.getElementsByTagName("LinearRing"),n=[];for(s=0;s<e.length;s++)n.push(V(b(N(e[s],"coordinates"))));a.push({type:"Polygon",coordinates:n})}else if("Track"===I[r]||"gx:Track"===I[r]){const e=X(t);a.push({type:"LineString",coordinates:e.coords}),e.times.length&&i.push(e.times)}return{geoms:a,coordTimes:i}}function q(e,t,n,r){const o=$(e);let s;const a={},i=b(N(e,"name")),l=b(N(e,"address"));let c=b(N(e,"styleUrl"));const u=b(N(e,"description")),f=N(e,"TimeSpan"),p=N(e,"TimeStamp"),g=N(e,"ExtendedData");let m=N(e,"IconStyle"),d=N(e,"LabelStyle"),h=N(e,"LineStyle"),y=N(e,"PolyStyle");const v=N(e,"visibility");if(i&&(a.name=i),l&&(a.address=l),c){"#"!==c[0]&&(c="#"+c),a.styleUrl=c,t[c]&&(a.styleHash=t[c]),n[c]&&(a.styleMapHash=n[c],a.styleHash=t[n[c].normal]);const e=r[a.styleHash];e&&(m||(m=N(e,"IconStyle")),d||(d=N(e,"LabelStyle")),h||(h=N(e,"LineStyle")),y||(y=N(e,"PolyStyle")))}if(u&&(a.description=u),f){const e=b(N(f,"begin")),t=b(N(f,"end"));a.timespan={begin:e,end:t}}if(p&&(a.timestamp=b(N(p,"when"))),m){z(a,m,"icon"),U(a,m,"scale","icon-scale"),U(a,m,"heading","icon-heading");const e=N(m,"hotSpot");if(e){const t=parseFloat(e.getAttribute("x")),n=parseFloat(e.getAttribute("y"));isNaN(t)||isNaN(n)||(a["icon-offset"]=[t,n])}const t=N(m,"Icon");if(t){const e=b(N(t,"href"));e&&(a.icon=e)}}if(d&&(z(a,d,"label"),U(a,d,"scale","label-scale")),h&&(z(a,h,"stroke"),U(a,h,"width","stroke-width")),y){z(a,y,"fill");const e=b(N(y,"fill")),t=b(N(y,"outline"));e&&(a["fill-opacity"]="1"===e?a["fill-opacity"]||1:0),t&&(a["stroke-opacity"]="1"===t?a["stroke-opacity"]||1:0)}if(g){const e=g.getElementsByTagName("Data"),t=g.getElementsByTagName("SimpleData");for(s=0;s<e.length;s++)a[e[s].getAttribute("name")]=b(N(e[s],"value"));for(s=0;s<t.length;s++)a[t[s].getAttribute("name")]=b(t[s])}v&&(a.visibility=b(v)),o.coordTimes.length&&(a.coordinateProperties={times:1===o.coordTimes.length?o.coordTimes[0]:o.coordTimes});const x={type:"Feature",geometry:0===o.geoms.length?null:1===o.geoms.length?o.geoms[0]:{type:"GeometryCollection",geometries:o.geoms},properties:a};return e.getAttribute("id")&&(x.id=e.getAttribute("id")),x}function*K(e){const t={},n={},r={},o=e.getElementsByTagName("Placemark"),s=e.getElementsByTagName("Style"),a=e.getElementsByTagName("StyleMap");for(let e=0;e<s.length;e++){const r=W(J(s[e])).toString(16);t["#"+s[e].getAttribute("id")]=r,n[r]=s[e]}for(let e=0;e<a.length;e++){t["#"+a[e].getAttribute("id")]=W(J(a[e])).toString(16);const n=a[e].getElementsByTagName("Pair"),o={};for(let e=0;e<n.length;e++)o[b(N(n[e],"key"))]=b(N(n[e],"styleUrl"));r["#"+a[e].getAttribute("id")]=o}for(let e=0;e<o.length;e++){const s=q(o[e],t,r,n);s&&(yield s)}}var Q=x.gpx=function(e){return{type:"FeatureCollection",features:Array.from(A(e))}},Y=x.gpxGen=A,Z=x.kml=function(e){return{type:"FeatureCollection",features:Array.from(K(e))}},ee=x.kmlGen=K,te=x.tcx=function(e){return{type:"FeatureCollection",features:Array.from(R(e))}},ne=x.tcxGen=R,re=Object.freeze(t({__proto__:null,gpx:Q,gpxGen:Y,kml:Z,kmlGen:ee,tcx:te,tcxGen:ne,default:x},[x]));const oe=["topojson","kml","gpx","tcx","csv","tsv"];class se{constructor(e,t){this.blankGeoJSON=()=>({type:"FeatureCollection",features:[]}),this.loadXml=async()=>re[this._format]((new DOMParser).parseFromString(this._rawData,"text/xml")),this.loadCsv=async()=>{let e=this.blankGeoJSON(),t={};return"tsv"===this._format&&(t.delimiter="\t"),e=await new Promise(((e,n)=>{h.csv2geojson(this._rawData,t,((t,r)=>t?n(t):e(r)))})),e},this.loadTopoJson=async()=>{let e={};try{e=JSON.parse(this._rawData)}catch(e){throw"Invalid TopoJson"}let t=this.blankGeoJSON();return"Topology"===e.type&&void 0!==e.objects&&(t={type:"FeatureCollection",features:t.features=Object.keys(e.objects).map((t=>{return n=e,"string"==typeof(r=t)&&(r=n.objects[r]),"GeometryCollection"===r.type?{type:"FeatureCollection",features:r.geometries.map((function(e){return v(n,e)}))}:v(n,r);var n,r})).reduce(((e,t)=>[...e,...t.features]),[])}),t},this._rawData=t,this._format=e;const n={topojson:this.loadTopoJson,kml:this.loadXml,gpx:this.loadXml,tcx:this.loadXml,csv:this.loadCsv,tsv:this.loadCsv};this._conversionFn=n[e]}async convert(){return this._conversionFn?this._conversionFn():new Promise(((e,t)=>t(`No converter exists for ${this._format}`)))}}const ae=(e,t)=>{const n=e.url.split("://")[0],r=e.url.replace(new RegExp(`^${n}://`),"");return fetch(r).then((e=>{200==e.status?e.text().then((e=>{new se(n,e).convert().then((e=>{t(null,e,null,null)})).catch((e=>{t(e)}))})):t(new Error(`Data fetch error: ${e.statusText}`))})).catch((e=>{t(new Error(e))})),{cancel:()=>{}}};e.VectorTextProtocol=ae,e.addProtocols=e=>{oe.forEach((t=>{e.addProtocol(t,ae)}))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=maplibregl-vector-text-protocol.min.js.map
